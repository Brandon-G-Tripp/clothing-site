{"ast":null,"code":"var _jsxFileName = \"/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"If you already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nimport {\n   SignInContainer,\n   SignInTitle,\n   ButtonsBarContainer\n} from './sign-in.styles';\n\nclass SignIn extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         email: '',\n         password: ''\n      }\n   }\n\n   handleSubmit = async event => {\n      event.preventDefault();\n\n      const { email, password } = this.state;\n\n      try {\n         await auth.signInWithEmailAndPassword(email, password);\n         this.setState({ email: '', password: '' });\n      } catch (error) {\n         console.log(error);\n      }\n   }\n\n   handleChange = event => {\n      const { value, name } = event.target;\n      this.setState({ [name]: value });\n   }\n\n   render () {\n      return(\n         <SignInContainer>\n            <SignInTitle>If you already have an account</SignInTitle>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={this.handleSubmit}>\n               <FormInput\n                  name='email' \n                  type='email' \n                  value={this.state.email} \n                  handleChange={this.handleChange}\n                  label='email'\n                  required \n               />\n               <FormInput \n                  name='password' \n                  type='password' \n                  value={this.state.password} \n                  handleChange={this.handleChange}\n                  label='password'\n                  required \n               />\n               <ButtonsBarContainer>\n                  <CustomButton type='submit'>SIGN IN</CustomButton>\n                  <CustomButton onClick={signInWithGoogle} isGoogleSignIn >\n                     Sign in with Google\n                  </CustomButton>\n               </ButtonsBarContainer>\n            </form>\n         </SignInContainer>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}