{"ast":null,"code":"var _jsxFileName = \"/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); //fetch style api call to firebase\n\n    fetch('https://firestore.googleapis.com/v1/projects/crown-db-e3281/databases/(default)/documents/collections').then(response => response.json()).then(collections => console.log(collections)); //Promise chaining pattern \n    // collectionRef.get.then(snapshot => {\n    //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //    updateCollections(collectionsMap);\n    //    this.setState({loading: false});\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAwC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACLC,MAAAA,OAAO,EAAE;AADJ,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AACjB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CAFiB,CAIjB;;AACAC,IAAAA,KAAK,CAAC,uGAAD,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFxB,EALiB,CASjB;AAEA;AACA;AACA;AACA;AACA;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AACG,MAAA,KAAK,MADR;AAEG,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAFvB;AAGG,MAAA,MAAM,EAAGZ,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGH;AAA5C,SAAyDG,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAMG,oBAAC,KAAD;AACG,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADvB;AAEG,MAAA,MAAM,EAAGZ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADH;AAaF;;AAzCoC;;AA4CxC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACrCxB,EAAAA,iBAAiB,EAAEyB,cAAc,IAAID,QAAQ,CAACxB,iBAAiB,CAACyB,cAAD,CAAlB;AADR,CAAL,CAAnC;;AAKA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component  {\n   state = {\n      loading: true\n   };\n\n   unsubscribeFromSnapshot = null;\n\n   componentDidMount() {\n      const { updateCollections } = this.props;\n      const collectionRef = firestore.collection('collections');\n\n      //fetch style api call to firebase\n      fetch('https://firestore.googleapis.com/v1/projects/crown-db-e3281/databases/(default)/documents/collections')\n         .then(response => response.json())\n         .then(collections => console.log(collections));\n      \n      //Promise chaining pattern \n\n      // collectionRef.get.then(snapshot => {\n      //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //    updateCollections(collectionsMap);\n      //    this.setState({loading: false});\n      // })\n   }\n\n   render() {\n      const { match } = this.props;\n      const { loading } = this.state;\n      return (\n         <div className='shop-page'>\n            <Route   \n               exact \n               path={`${match.path}`} \n               render={(props) => <CollectionsOverviewWithSpinner isLoading= {loading} {...props} />}\n            />\n            <Route \n               path={`${match.path}/:collectionId`}    \n               render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}  \n            />\n         </div>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}