{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart()); //Promise chaining pattern \n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACGC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR,CAJmC,CAKnC;;AAEAH,EAAAA,aAAa,CACTI,GADJ,GAEIC,IAFJ,CAESC,QAAQ,IAAI;AACf,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACL,GALD,EAKGE,KALH,CAKSC,KAAK,IAAIR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAL1B;AAML;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACtC,QAAMV,SAAS,CACZG,eAAe,CAACiB,uBADJ,EAEZhB,qBAFY,CAAf;AAIF","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n   yield console.log('I am fired');\n\n   const collectionRef = firestore.collection('collections');\n      dispatch(fetchCollectionsStart());\n      //Promise chaining pattern \n\n      collectionRef\n         .get()\n         .then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n      }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n   yield takeEvery(\n      ShopActionTypes.FETCH_COLLECTIONS_START,\n      fetchCollectionsAsync \n   );\n}"]},"metadata":{},"sourceType":"module"}