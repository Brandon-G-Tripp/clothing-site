{"ast":null,"code":"var _jsxFileName = \"/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-router-dom';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      signUpStart();\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match\");\n        return;\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SignUpContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(SignUpTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart(displayName, email, password, confirmPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","auth","createUserProfileDocument","SignUpContainer","SignUpTitle","SignUp","Component","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-router-dom';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport {\n   SignUpContainer,\n   SignUpTitle\n} from './sign-up.styles';\n\nclass SignUp extends React.Component {\n   constructor() {\n      super();\n\n      this.state = {\n         displayName: '',\n         email: '',\n         password: '',\n         confirmPassword: ''\n      }\n   }\n\n   handleSubmit = async event => {\n      event.preventDefault();\n\n      const { displayName, email, password, confirmPassword } = this.state;\n\n      signUpStart();\n\n      if (password !== confirmPassword) {\n         alert(\"Passwords do not match\");\n         return;\n      }\n \n   };\n\n   handleChange = event => {\n      const { name, value } = event.target;\n\n      this.setState({ [name]: value });\n   }\n\n   render(){\n      const { displayName, email, password, confirmPassword } = this.state;\n      return (\n         <SignUpContainer>\n            <SignUpTitle>I do not have an account</SignUpTitle>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n               <FormInput \n                  type='text'\n                  name='displayName'\n                  value={displayName}\n                  onChange={this.handleChange}\n                  label='Display Name'\n                  required\n               />\n               <FormInput \n                  type='email'\n                  name='email'\n                  value={email}\n                  onChange={this.handleChange}\n                  label='Email'\n                  required\n               />\n               <FormInput \n                  type='password'\n                  name='password'\n                  value={password}\n                  onChange={this.handleChange}\n                  label='Password'\n                  required\n               />\n               <FormInput \n                  type='password'\n                  name='confirmPassword'\n                  value={confirmPassword}\n                  onChange={this.handleChange}\n                  label='Confirm Password'\n                  required\n               />\n               <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n         </SignUpContainer>\n      );\n   }\n}\n\nconst mapDispatchToProps = dispatch => ({\n   signUpStart: (displayName, email, password, confirmPassword) => \n      dispatch(signUpStart(displayName, email, password, confirmPassword))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}