{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCPfuARdlgmLiqJyDiX3ypTgpbZQsMBZ_Q\",\n  authDomain: \"crown-db-e3281.firebaseapp.com\",\n  databaseURL: \"https://crown-db-e3281.firebaseio.com\",\n  projectId: \"crown-db-e3281\",\n  storageBucket: \"crown-db-e3281.appspot.com\",\n  messagingSenderId: \"568837575602\",\n  appId: \"1:568837575602:web:f59c303946ec6c24b80aab\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.id}`);\n  const snapShot = await userRef.get();\n  console.log(userRef, snapShot);\n\n  if (!snapShot.id) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","id","snapShot","get","console","log","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,EAAG,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqBI,QAArB;;AACA,MAAG,CAACA,QAAQ,CAACD,EAAb,EAAgB;AACd,UAAM;AAAEK,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBX,QAA/B;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMX,OAAO,CAACY,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGX;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOc,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOd,OAAP;AACD,CAxBM;AA0BPZ,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCPfuARdlgmLiqJyDiX3ypTgpbZQsMBZ_Q\",\n    authDomain: \"crown-db-e3281.firebaseapp.com\",\n    databaseURL: \"https://crown-db-e3281.firebaseio.com\",\n    projectId: \"crown-db-e3281\",\n    storageBucket: \"crown-db-e3281.appspot.com\",\n    messagingSenderId: \"568837575602\",\n    appId: \"1:568837575602:web:f59c303946ec6c24b80aab\"\n  };\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.id}`);\n  \n  const snapShot = await userRef.get();\n  console.log(userRef, snapShot);\n  if(!snapShot.id){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};   \n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n\n\n"]},"metadata":{},"sourceType":"module"}