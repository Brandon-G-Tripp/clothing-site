{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  //    .get()\n  //    .then(snapshot => {\n  //       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/brandontripp/Documents/Programming /ReactCourseAndrei/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACGC,uBADH,EAEGC,uBAFH,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACF,GALD,CAKE,OAAOC,KAAP,EAAc;AACb,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACF,GAVqC,CAanC;AACA;AACA;AACA;AACA;AACA;;AACL;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACtC,QAAMlB,SAAS,CACZO,eAAe,CAACY,uBADJ,EAEZX,qBAFY,CAAf;AAIF","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport {\n   fetchCollectionsSuccess,\n   fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n   yield console.log('I am fired');\n\n   try{\n      const collectionRef = firestore.collection('collections');\n      const snapshot = yield collectionRef.get();\n      const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n      yield put(fetchCollectionsSuccess(collectionsMap));\n   } catch (error) {\n      yield put(fetchCollectionsFailure(error.message));\n   }\n\n\n      // collectionRef\n      //    .get()\n      //    .then(snapshot => {\n      //       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //       dispatch(fetchCollectionsSuccess(collectionsMap));\n      // }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n   yield takeEvery(\n      ShopActionTypes.FETCH_COLLECTIONS_START,\n      fetchCollectionsAsync \n   );\n}"]},"metadata":{},"sourceType":"module"}